{
  "address": "0x1829e003a04165AE019cD4D8Ec4B99423A27cE94",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x82739a8d099b43de109fc81707946ef3a4c8ce99f79dcb71c195d7b80283e7d3",
  "receipt": {
    "to": null,
    "from": "0xDFDf6ED969B8c62aE7cb53852360Bd214Cd220C4",
    "contractAddress": "0x1829e003a04165AE019cD4D8Ec4B99423A27cE94",
    "transactionIndex": 132,
    "gasUsed": "1054710",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xacc6f7537a99fef8ec0411a4560b15763887c9fb18524b4bbfd1fd00751852e4",
    "transactionHash": "0x82739a8d099b43de109fc81707946ef3a4c8ce99f79dcb71c195d7b80283e7d3",
    "logs": [],
    "blockNumber": 7860670,
    "cumulativeGasUsed": "24774622",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "dc2f40c012eecc4dd220af4405590d00",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Ashish Kumar\",\"details\":\"This implements the price feed as our libary\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is demo sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n * @author Ashish Kumar\\n * @notice This contract is demo sample funding contract\\n * @dev This implements the price feed as our libary\\n */\\n\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n    \\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    function withdraw() public payable onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder]; \\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n\\n}\",\"keccak256\":\"0xebfc39429a0b96a5079453d1986a7323306070cd379127d51cfaa1caf1819049\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x9f3d3a679b05f77ff385baa37690cc5d8848abd8fc64f74fc837d28ebd07fd1d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200133c3803806200133c833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111b662000186600039600081816103dd0152818161062c0152818161067c015261087201526111b66000f3fe60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610164578063893d20e81461018f5780639e87a5cd146101ba578063b60d4288146101e5578063be2693f0146101ef57610099565b80630343fb25146100a35780631bf6132d146100e05780633a7b6c741461011d5780633ccfd60b1461015a57610099565b36610099576100976101f9565b005b6100a16101f9565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610aee565b610333565b6040516100d79190610b34565b60405180910390f35b3480156100ec57600080fd5b5061010760048036038101906101029190610aee565b61037b565b6040516101149190610b34565b60405180910390f35b34801561012957600080fd5b50610144600480360381019061013f9190610b7b565b610393565b6040516101519190610bb7565b60405180910390f35b6101626103db565b005b34801561017057600080fd5b5061017961061b565b6040516101869190610b34565b60405180910390f35b34801561019b57600080fd5b506101a4610628565b6040516101b19190610bb7565b60405180910390f35b3480156101c657600080fd5b506101cf610650565b6040516101dc9190610c31565b60405180910390f35b6101ed6101f9565b005b6101f761067a565b005b6802b5e3af16b1880000610238600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461090890919063ffffffff16565b1015610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027090610ca9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c79190610cf8565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006020528060005260406000206000915090505481565b6000600182815481106103a9576103a8610d4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610460576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561050b5760006001828154811061048657610485610d4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050390610d7d565b915050610463565b50600067ffffffffffffffff81111561052757610526610dc6565b5b6040519080825280602002602001820160405280156105555781602001602082028036833780820191505090505b506001908051906020019061056b9291906109e4565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059290610e26565b60006040518083038185875af1925050503d80600081146105cf576040519150601f19603f3d011682016040523d82523d6000602084013e6105d4565b606091505b5050905080610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610e87565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ff576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561078357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610739575b5050505050905060005b815181101561080d5760008282815181106107ab576107aa610d4e565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061080590610d7d565b91505061078d565b50600067ffffffffffffffff81111561082957610828610dc6565b5b6040519080825280602002602001820160405280156108575781602001602082028036833780820191505090505b506001908051906020019061086d9291906109e4565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108b490610e26565b60006040518083038185875af1925050503d80600081146108f1576040519150601f19603f3d011682016040523d82523d6000602084013e6108f6565b606091505b505090508061090457600080fd5b5050565b60008061091483610944565b90506000670de0b6b3a7640000858361092d9190610ea7565b6109379190610f30565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098d57600080fd5b505afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610fee565b5050509150506402540be400816109dc9190611069565b915050919050565b828054828255906000526020600020908101928215610a5d579160200282015b82811115610a5c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a04565b5b509050610a6a9190610a6e565b5090565b5b80821115610a87576000816000905550600101610a6f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abb82610a90565b9050919050565b610acb81610ab0565b8114610ad657600080fd5b50565b600081359050610ae881610ac2565b92915050565b600060208284031215610b0457610b03610a8b565b5b6000610b1284828501610ad9565b91505092915050565b6000819050919050565b610b2e81610b1b565b82525050565b6000602082019050610b496000830184610b25565b92915050565b610b5881610b1b565b8114610b6357600080fd5b50565b600081359050610b7581610b4f565b92915050565b600060208284031215610b9157610b90610a8b565b5b6000610b9f84828501610b66565b91505092915050565b610bb181610ab0565b82525050565b6000602082019050610bcc6000830184610ba8565b92915050565b6000819050919050565b6000610bf7610bf2610bed84610a90565b610bd2565b610a90565b9050919050565b6000610c0982610bdc565b9050919050565b6000610c1b82610bfe565b9050919050565b610c2b81610c10565b82525050565b6000602082019050610c466000830184610c22565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c93601b83610c4c565b9150610c9e82610c5d565b602082019050919050565b60006020820190508181036000830152610cc281610c86565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0382610b1b565b9150610d0e83610b1b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4357610d42610cc9565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d8882610b1b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dbb57610dba610cc9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e10600083610df5565b9150610e1b82610e00565b600082019050919050565b6000610e3182610e03565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e71600b83610c4c565b9150610e7c82610e3b565b602082019050919050565b60006020820190508181036000830152610ea081610e64565b9050919050565b6000610eb282610b1b565b9150610ebd83610b1b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ef657610ef5610cc9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3b82610b1b565b9150610f4683610b1b565b925082610f5657610f55610f01565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f8081610f61565b8114610f8b57600080fd5b50565b600081519050610f9d81610f77565b92915050565b6000819050919050565b610fb681610fa3565b8114610fc157600080fd5b50565b600081519050610fd381610fad565b92915050565b600081519050610fe881610b4f565b92915050565b600080600080600060a0868803121561100a57611009610a8b565b5b600061101888828901610f8e565b955050602061102988828901610fc4565b945050604061103a88828901610fd9565b935050606061104b88828901610fd9565b925050608061105c88828901610f8e565b9150509295509295909350565b600061107482610fa3565b915061107f83610fa3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110be576110bd610cc9565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110fb576110fa610cc9565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561113857611137610cc9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561117557611174610cc9565b5b82820290509291505056fea264697066735822122049f6e8aebc417c84174f4c61441389c576a4c51a7020c96cdb62534c4843884764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610164578063893d20e81461018f5780639e87a5cd146101ba578063b60d4288146101e5578063be2693f0146101ef57610099565b80630343fb25146100a35780631bf6132d146100e05780633a7b6c741461011d5780633ccfd60b1461015a57610099565b36610099576100976101f9565b005b6100a16101f9565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610aee565b610333565b6040516100d79190610b34565b60405180910390f35b3480156100ec57600080fd5b5061010760048036038101906101029190610aee565b61037b565b6040516101149190610b34565b60405180910390f35b34801561012957600080fd5b50610144600480360381019061013f9190610b7b565b610393565b6040516101519190610bb7565b60405180910390f35b6101626103db565b005b34801561017057600080fd5b5061017961061b565b6040516101869190610b34565b60405180910390f35b34801561019b57600080fd5b506101a4610628565b6040516101b19190610bb7565b60405180910390f35b3480156101c657600080fd5b506101cf610650565b6040516101dc9190610c31565b60405180910390f35b6101ed6101f9565b005b6101f761067a565b005b6802b5e3af16b1880000610238600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461090890919063ffffffff16565b1015610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027090610ca9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c79190610cf8565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006020528060005260406000206000915090505481565b6000600182815481106103a9576103a8610d4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610460576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561050b5760006001828154811061048657610485610d4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050390610d7d565b915050610463565b50600067ffffffffffffffff81111561052757610526610dc6565b5b6040519080825280602002602001820160405280156105555781602001602082028036833780820191505090505b506001908051906020019061056b9291906109e4565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059290610e26565b60006040518083038185875af1925050503d80600081146105cf576040519150601f19603f3d011682016040523d82523d6000602084013e6105d4565b606091505b5050905080610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610e87565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ff576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561078357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610739575b5050505050905060005b815181101561080d5760008282815181106107ab576107aa610d4e565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061080590610d7d565b91505061078d565b50600067ffffffffffffffff81111561082957610828610dc6565b5b6040519080825280602002602001820160405280156108575781602001602082028036833780820191505090505b506001908051906020019061086d9291906109e4565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108b490610e26565b60006040518083038185875af1925050503d80600081146108f1576040519150601f19603f3d011682016040523d82523d6000602084013e6108f6565b606091505b505090508061090457600080fd5b5050565b60008061091483610944565b90506000670de0b6b3a7640000858361092d9190610ea7565b6109379190610f30565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098d57600080fd5b505afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610fee565b5050509150506402540be400816109dc9190611069565b915050919050565b828054828255906000526020600020908101928215610a5d579160200282015b82811115610a5c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a04565b5b509050610a6a9190610a6e565b5090565b5b80821115610a87576000816000905550600101610a6f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abb82610a90565b9050919050565b610acb81610ab0565b8114610ad657600080fd5b50565b600081359050610ae881610ac2565b92915050565b600060208284031215610b0457610b03610a8b565b5b6000610b1284828501610ad9565b91505092915050565b6000819050919050565b610b2e81610b1b565b82525050565b6000602082019050610b496000830184610b25565b92915050565b610b5881610b1b565b8114610b6357600080fd5b50565b600081359050610b7581610b4f565b92915050565b600060208284031215610b9157610b90610a8b565b5b6000610b9f84828501610b66565b91505092915050565b610bb181610ab0565b82525050565b6000602082019050610bcc6000830184610ba8565b92915050565b6000819050919050565b6000610bf7610bf2610bed84610a90565b610bd2565b610a90565b9050919050565b6000610c0982610bdc565b9050919050565b6000610c1b82610bfe565b9050919050565b610c2b81610c10565b82525050565b6000602082019050610c466000830184610c22565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c93601b83610c4c565b9150610c9e82610c5d565b602082019050919050565b60006020820190508181036000830152610cc281610c86565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0382610b1b565b9150610d0e83610b1b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4357610d42610cc9565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d8882610b1b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dbb57610dba610cc9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e10600083610df5565b9150610e1b82610e00565b600082019050919050565b6000610e3182610e03565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e71600b83610c4c565b9150610e7c82610e3b565b602082019050919050565b60006020820190508181036000830152610ea081610e64565b9050919050565b6000610eb282610b1b565b9150610ebd83610b1b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ef657610ef5610cc9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3b82610b1b565b9150610f4683610b1b565b925082610f5657610f55610f01565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f8081610f61565b8114610f8b57600080fd5b50565b600081519050610f9d81610f77565b92915050565b6000819050919050565b610fb681610fa3565b8114610fc157600080fd5b50565b600081519050610fd381610fad565b92915050565b600081519050610fe881610b4f565b92915050565b600080600080600060a0868803121561100a57611009610a8b565b5b600061101888828901610f8e565b955050602061102988828901610fc4565b945050604061103a88828901610fd9565b935050606061104b88828901610fd9565b925050608061105c88828901610f8e565b9150509295509295909350565b600061107482610fa3565b915061107f83610fa3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110be576110bd610cc9565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110fb576110fa610cc9565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561113857611137610cc9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561117557611174610cc9565b5b82820290509291505056fea264697066735822122049f6e8aebc417c84174f4c61441389c576a4c51a7020c96cdb62534c4843884764736f6c63430008080033",
  "devdoc": {
    "author": "Ashish Kumar",
    "details": "This implements the price feed as our libary",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is demo sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 322,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 337,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}